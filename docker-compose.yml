---
x-default-logging:
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"

networks:
  net:
    driver: bridge
services:
# docker run --name pgvector-container -e POSTGRES_USER=langchain -e POSTGRES_PASSWORD=langchain -e POSTGRES_DB=langchain -p 6024:5432 -d pgvector/pgvector:pg16
  pgdatabase:
    image: pgvector/pgvector:0.7.4-pg16
    container_name: pgvector16_sbx
    ports:
      - 8432:5432
    volumes:
      # This script initialises the DB for integration tests
      # - ./docker/pgvector/scripts:/docker-entrypoint-initdb.d
      - sbx_pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=langchain
      - POSTGRES_USER=langchain
      - POSTGRES_DB=langchain

    restart: unless-stopped

    networks:
      - net
    command: |
      postgres -c log_statement=all

  pgadmin:
    image: dpage/pgadmin4
    profiles:
      - "admin"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-4000}:80"
    volumes:
      - sbx_pgadmindata:/var/lib/pgadmin

  server:
    # image: server
    image: chromadb/chroma:latest
    container_name: chroma_sbx
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    volumes:
      # Be aware that indexed data are located in "/chroma/chroma/"
      # Default configuration for persist_directory in chromadb/config.py
      # Read more about deployments: https://docs.trychroma.com/deployment
      # - chroma-data:/chroma/chroma
      - ./src/sandbox_agent/data/chroma/vectorstorage:/chroma/chroma:rw

    command: "--workers 1 --host 0.0.0.0 --port 9010 --proxy-headers --log-config chromadb/log_config.yml --timeout-keep-alive\
      \ 30"
    environment:
      - IS_PERSISTENT=TRUE
      - ALLOW_RESET=TRUE
      - CHROMA_SERVER_AUTHN_PROVIDER=${CHROMA_SERVER_AUTHN_PROVIDER}
      - CHROMA_SERVER_AUTHN_CREDENTIALS_FILE=${CHROMA_SERVER_AUTHN_CREDENTIALS_FILE}
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
      - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMA_AUTH_TOKEN_TRANSPORT_HEADER}
      - PERSIST_DIRECTORY=${PERSIST_DIRECTORY:-/chroma/chroma}

      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]

      - CHROMA_SERVER_NOFILE=${CHROMA_SERVER_NOFILE}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped # possible values are: "no", always", "on-failure", "unless-stopped"

    ports:
      - "9010:9010"
    healthcheck:
      # Adjust below to match your container port
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:9010/api/v1/heartbeat"
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - net

  # NOTE: Use http://host.docker.internal:9010 to access the server from the admin container
  chromadb-admin:
    image: "fengzhichao/chromadb-admin:latest"
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    # hostname: 'chromadb-admin'
    ports:
      - "4001:3000/tcp"
    container_name: chromadb-admin-sbx
    expose:
      - 4001
    restart: unless-stopped
    networks:
      - net
    # depends_on:
    # - server
    depends_on:
      server:
        condition: service_started

  redis:
    image: bitnami/redis:6.2.10
    hostname: "goob-redis-sbx"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_PORT_NUMBER: 8600
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50
    ports:
      - "8600:8600"
    volumes:
      - 'sbx_goob_redis_data:/bitnami/redis/data'

volumes:
  sbx_goob_redis_data:
    driver: local
  sbx_pgdata:
    name: ${PGVECTOR_VOLUME_NAME:-pgdata}
  sbx_pgadmindata:
    name: ${PGADMIN_VOLUME_NAME:-pgadmindata}
  # breviaappdata:
  #   name: ${BREVIA_APP_VOLUME_NAME:-breviaapp}
  # breviaapidata:
  #   name: ${BREVIA_API_VOLUME_NAME:-breviaapi}
