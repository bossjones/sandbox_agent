"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional, Protocol, Sequence, TypeVar, runtime_checkable
from typing_extensions import Self

ERROR = ...
SCHEDULED = ...
TASKS = ...
Value = TypeVar("Value", covariant=True)
Update = TypeVar("Update", contravariant=True)
C = TypeVar("C")
class ChannelProtocol(Protocol[Value, Update, C]):
    @property
    def ValueType(self) -> Any:
        ...

    @property
    def UpdateType(self) -> Any:
        ...

    def checkpoint(self) -> Optional[C]:
        ...

    def from_checkpoint(self, checkpoint: Optional[C]) -> Self:
        ...

    def update(self, values: Sequence[Update]) -> bool:
        ...

    def get(self) -> Value:
        ...

    def consume(self) -> bool:
        ...



@runtime_checkable
class SendProtocol(Protocol):
    node: str
    arg: Any
    def __hash__(self) -> int:
        ...

    def __repr__(self) -> str:
        ...

    def __eq__(self, value: object) -> bool:
        ...
