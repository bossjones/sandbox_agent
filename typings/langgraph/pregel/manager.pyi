"""
This type stub file was generated by pyright.
"""

from contextlib import asynccontextmanager, contextmanager
from typing import AsyncIterator, Iterator, Mapping, Union
from langgraph.channels.base import BaseChannel
from langgraph.checkpoint.base import Checkpoint
from langgraph.managed.base import ManagedValueMapping, ManagedValueSpec
from langgraph.types import LoopProtocol

@contextmanager
def ChannelsManager(specs: Mapping[str, Union[BaseChannel, ManagedValueSpec]], checkpoint: Checkpoint, loop: LoopProtocol, *, skip_context: bool = ...) -> Iterator[tuple[Mapping[str, BaseChannel], ManagedValueMapping]]:
    """Manage channels for the lifetime of a Pregel invocation (multiple steps)."""
    ...

@asynccontextmanager
async def AsyncChannelsManager(specs: Mapping[str, Union[BaseChannel, ManagedValueSpec]], checkpoint: Checkpoint, loop: LoopProtocol, *, skip_context: bool = ...) -> AsyncIterator[tuple[Mapping[str, BaseChannel], ManagedValueMapping]]:
    """Manage channels for the lifetime of a Pregel invocation (multiple steps)."""
    ...

@contextmanager
def noop_context() -> Iterator[None]:
    ...
