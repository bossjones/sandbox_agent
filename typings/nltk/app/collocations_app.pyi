"""
This type stub file was generated by pyright.
"""

import threading

CORPUS_LOADED_EVENT = ...
ERROR_LOADING_CORPUS_EVENT = ...
POLL_INTERVAL = ...
_DEFAULT = ...
_CORPORA = ...
class CollocationsView:
    _BACKGROUND_COLOUR = ...
    def __init__(self) -> None:
        ...

    def set_result_size(self, **kwargs): # -> None:
        ...

    def reset_current_page(self): # -> None:
        ...

    def handle_error_loading_corpus(self, event): # -> None:
        ...

    def handle_corpus_loaded(self, event): # -> None:
        ...

    def corpus_selected(self, *args): # -> None:
        ...

    def previous(self): # -> None:
        ...

    def __next__(self): # -> None:
        ...

    def load_corpus(self, selection): # -> None:
        ...

    def freeze_editable(self): # -> None:
        ...

    def clear_results_box(self): # -> None:
        ...

    def fire_event(self, event): # -> None:
        ...

    def destroy(self, *e): # -> None:
        ...

    def mainloop(self, *args, **kwargs): # -> None:
        ...

    def unfreeze_editable(self): # -> None:
        ...

    def set_paging_button_states(self): # -> None:
        ...

    def write_results(self, results): # -> None:
        ...



class CollocationsModel:
    def __init__(self, queue) -> None:
        ...

    def reset_results(self): # -> None:
        ...

    def load_corpus(self, name): # -> None:
        ...

    def non_default_corpora(self): # -> list:
        ...

    def is_last_page(self, number): # -> Literal[False]:
        ...

    def next(self, page):
        ...

    def prev(self, page): # -> list:
        ...

    class LoadCorpus(threading.Thread):
        def __init__(self, name, model) -> None:
            ...

        def run(self): # -> None:
            ...





def app(): # -> None:
    ...

if __name__ == "__main__":
    ...
__all__ = ["app"]
