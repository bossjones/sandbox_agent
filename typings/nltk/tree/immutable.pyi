"""
This type stub file was generated by pyright.
"""

from nltk.probability import ProbabilisticMixIn
from nltk.tree.parented import MultiParentedTree, ParentedTree
from nltk.tree.tree import Tree

class ImmutableTree(Tree):
    def __init__(self, node, children=...) -> None:
        ...

    def __setitem__(self, index, value):
        ...

    def __setslice__(self, i, j, value):
        ...

    def __delitem__(self, index):
        ...

    def __delslice__(self, i, j):
        ...

    def __iadd__(self, other):
        ...

    def __imul__(self, other):
        ...

    def append(self, v):
        ...

    def extend(self, v):
        ...

    def pop(self, v=...):
        ...

    def remove(self, v):
        ...

    def reverse(self):
        ...

    def sort(self):
        ...

    def __hash__(self) -> int:
        ...

    def set_label(self, value): # -> None:
        """
        Set the node label.  This will only succeed the first time the
        node label is set, which should occur in ImmutableTree.__init__().
        """
        ...



class ImmutableProbabilisticTree(ImmutableTree, ProbabilisticMixIn):
    def __init__(self, node, children=..., **prob_kwargs) -> None:
        ...

    def __repr__(self): # -> str:
        ...

    def __str__(self) -> str:
        ...

    def copy(self, deep=...): # -> Self:
        ...

    @classmethod
    def convert(cls, val): # -> Self:
        ...



class ImmutableParentedTree(ImmutableTree, ParentedTree):
    ...


class ImmutableMultiParentedTree(ImmutableTree, MultiParentedTree):
    ...


__all__ = ["ImmutableProbabilisticTree", "ImmutableTree", "ImmutableParentedTree", "ImmutableMultiParentedTree"]
